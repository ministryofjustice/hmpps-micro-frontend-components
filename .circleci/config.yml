version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@7
  slack: circleci/slack@4.12.5

parameters:
  alerts-slack-channel:
    type: string
    default: connect-dps-devs

  releases-slack-channel:
    type: string
    default: dps-releases

  node-version:
    type: string
    default: 22.14-browsers

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          command: |
            npm run build
      - run:
          # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build
            - dist
            - assets/stylesheets

  build-int-test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-int-test-cache-{{ checksum "./integration_tests/package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm -prefix integration_tests ci --no-audit
      - run:
          command: npm -prefix integration_tests run build
      - save_cache:
          key: dependency-int-test-cache-{{ checksum "./integration_tests/package-lock.json" }}
          paths:
            - integration_tests/node_modules
            - ~/.cache
      - persist_to_workspace:
          root: .
          paths:
            - integration_tests/node_modules
            - integration_tests/build
            - integration_tests/dist
            - integration_tests/assets/stylesheets

  unit_test:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: "7.0"
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test:ci
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html

  integration_test:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: "7.0"
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: dependency-int-test-cache-{{ checksum "./integration_tests/package-lock.json" }}
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.3.1/wiremock-standalone-3.3.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Run the int test node app.
          command: npm run start-feature-test-app
          background: true
      - run:
          name: Run the components node app.
          command: npm run start-feature-components-app
          background: true
      - run:
          name: Wait for node apps to start
          command: sleep 5
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration_tests/videos
      - store_artifacts:
          path: integration_tests/screenshots

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - build-int-test:
          filters:
            tags:
              ignore: /.*/
          requires:
            - build
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
            - build-int-test
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker
          helm_timeout: 5m
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          context:
            - hmpps-common-vars
            - hmpps-micro-frontend-components-preprod
          requires:
            - request-preprod-approval
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-micro-frontend-components-prod
          requires:
            - request-prod-approval
          helm_timeout: 5m
